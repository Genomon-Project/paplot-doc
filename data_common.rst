**************************
Common Issue
**************************

Here, we describe several common issues that are helpful in generating reports using sample data [*]_.

.. [*] Sample data is equipped with the ``example`` directory of paplot directory.

.. _sept:

================================
1. Delimiter for the input data
================================

When the delimiter for the input data is tab or space character, then modify the configuration file as follows: 

.. code-block:: cfg

  # For the case of Mutation Matrix Report  
  [result_format_mutation]
  sept = \t

  # for the case of space character
  sept = " "

For QC and Chromosomal Aberration report, change the ``[result_format_qc]`` and ``[result_format_ca]`` sections.

----

.. _comment:

==========================
2. Comment line 
==========================

.. code-block:: cfg
  
  # This is comment.
  # Please skip this line.
  
  ID,Type,Gene
  SAMPLE00,intronic,GATA3
  SAMPLE00,UTR3,CDH1

In the default setting, the character "#" is used to denote the start of a comment line,
and paplot ignores it. To change the character for the comment line, modify the configuration file as follows:

.. code-block:: cfg

  # For the case of Mutation Matrix Report   
  [result_format_mutation]
  comment = #

For QC and Chromosomal Aberration report, change the ``[result_format_qc]`` and ``[result_format_ca]`` sections.


----

.. _suffix:

======================================
3. Processing multiple input data
======================================

In most cases, cancer genome study uses with multiple sequence data, and the reports generated by paplot consist of information from multiple samples.
To prepare input data with multiple samples for paplot, there are two approaches: 

 - case1: Single merged input data

   In this case, there should be the column of the sample name (that should be set in the key ``col_opt_id`` in the configuration file).
 
 - case2: Multiple input data divided by individual samples
 
   In this case, paplot discern sample names by file names (by removing the characters set by the ``suffix`` key in the configuration file).
   Alternatively, set the column for the sample name (and set the ``col_opt_id`` in the configuration file) for each input file.

In the previous examples, we mostly used merged input data (case 1 above). Here, we show how to generate a report using multipe input data (case 2).


| `View the report generated in this section <https://github.com/Genomon-Project/paplot/blob/master/example/mutation_split_file>`_ 
| `Download the input data used in this section <https://github.com/Genomon-Project/paplot/blob/master/example/mutation_split_file.zip?raw=true>`_ 


::

  example/mutation_split_file/

     # Input data files 
    ┣ SAMPLE00.data.csv  # input data for SAMPLE00
    ┣ SAMPLE01.data.csv  # input data for SAMPLE01
    ┣ SAMPLE02.data.csv  # input data for SAMPLE02
    ┣ SAMPLE03.data.csv  # input data for SAMPLE03
    ┣ SAMPLE04.data.csv  # input data for SAMPLE04

     # Configuration file
    ┗ paplot.cfg

.. code-block:: cfg
  :caption: Extracted from the example data (example/mutation_split_file/SAMPLE00.data.csv)

  MutationType,Gene
  intronic,GATA3
  intronic,FLT3
  intronic,FLT3
  UTR3,CDH1
  exonic,GATA3

Set the ``suffix`` key in the configuration file.

.. code-block:: cfg
  :caption: example/mutation_split_file/paplot.cfg

   [result_format_mutation]
   suffix = .data.csv
   
   # Do not use the col_opt_id
   col_opt_id = 

When the ``suffix`` key is set, then the file name before the ``suffix`` characters becomes the sample name.

.. image:: image/id_suffix.PNG
  :scale: 100%

Then, execute paplot.

.. code-block:: bash

  # For the case of Mutation Matrix Reprot

  # When setting each input file, then join them by ','.
  paplot mutation {unzip_path}/example/mutation_split_file/SAMPLE00.data.csv,{unzip_path}/example/mutation_split_file/SAMPLE01.data.csv ./tmp mutation_split_file \
  --config_file {unzip_path}/example/mutation_split_file/paplot.cfg

  # Also, wild-card character can be used. (Enclose in double quotations).
  paplot mutation "{unzip_path}/example/mutation_split_file/*.csv" ./tmp mutation_split_file \
  --config_file {unzip_path}/example/mutation_split_file/paplot.cfg

For QC and Chromosomal Aberration report, change the ``[result_format_qc]`` and ``[result_format_ca]`` sections.

.. _keyword:

==============================
4. Keyword
==============================

4-1. About keyword
----------------------------

With paplot, each data string entered in the configuration file can be used as a keyword.

**Configuration file**

.. code-block:: cfg
  
  [result_format_mutation]
  # Required items
  # col_{key} = {actual column name}
  #
  col_gene = Gene
  col_group = MutationType
  
  # Optional items
  # col_opt_{key} = {actual column name}
  #
  col_opt_id = Sample
  col_opt_start = Start
  col_opt_end = End

``col_{keyword} = {actual column name}`` or ``col_opt_{keyword} = {actual column name}`` entries, ``{keyword}`` will be the keyword.

Please note the following points.

 - There is no distinction between upper case and lower case letters. For example, CHR, Chr, and chr are considered to be the same.
 - The part ``{keyword}`` can be set arbitrarily. However, always start with ``col_opt_``.
 - ``col_opt_id`` has to be used only for sample ID.
 - For Mutation Matrix and Chromosomal Aberration, ``col_opt_group`` is also reserved, so it has to be used only for grouping.
 - Mutational signature Report and pmsignature Report can not use this function.
 
.. _user_format:

==============================
5. User defined format
==============================

We can customize the pop-up information that appears upon mouseover events.

It is set for each display part, but the way of writing is the same.

**Configuration file**

::

  tooltip_format_checker_partial = type[{func}], {chr}:{start}:{end}, [{ref} -> {alt}]
  
  # Example of display
  type[exome], chr1:2000:2001, [A -> T]

The character surrounded by {} is a keyword, and it is replaced with the actual value.

`About Keyword <./data_common.html#keyword>`_ 

5-1. Numerical calculation
----------------------------

paplot can use one or more keywords to perform numerical calculations.

::
  
  {key1/key2*100}%
  
  # Example of display
  3.33333333333333%

If you want to specify the number of digits to display, write ``: .2`` after the calculation formula.

::

  {key1/key2*100:.2}%
  
  # Example of display
  3.33%

.. |new| image:: image/tab_001.gif
